"use strict";(self.webpackChunkserenity_users_guide=self.webpackChunkserenity_users_guide||[]).push([[151],{5864:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return m},toc:function(){return d},default:function(){return s}});var n=a(7462),l=a(3366),i=(a(7294),a(3905)),r=["components"],o={id:"page_elements",title:"Serenity Page Elements",sidebar_position:5},p="Serenity Page Elements",m={unversionedId:"guide/page_elements",id:"guide/page_elements",isDocsHomePage:!1,title:"Serenity Page Elements",description:"Introduction",source:"@site/docs/guide/page_elements.md",sourceDirName:"guide",slug:"/guide/page_elements",permalink:"/documentation/docs/guide/page_elements",editUrl:"https://github.com/serenity-bdd/documentation/docs/guide/page_elements.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{id:"page_elements",title:"Serenity Page Elements",sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Step Libraries",permalink:"/documentation/docs/guide/step_libraries"}},d=[{value:"Introduction",id:"introduction",children:[]},{value:"Buttons",id:"buttons",children:[]},{value:"Checkbox",id:"checkbox",children:[]},{value:"Dropdown",id:"dropdown",children:[]},{value:"Image",id:"image",children:[]},{value:"InputField",id:"inputfield",children:[]},{value:"Link",id:"link",children:[]},{value:"PageElement",id:"pageelement",children:[]},{value:"RadioButton",id:"radiobutton",children:[]}],u={toc:d};function s(e){var t=e.components,a=(0,l.Z)(e,r);return(0,i.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"serenity-page-elements"},"Serenity Page Elements"),(0,i.kt)("h2",{id:"introduction"},"Introduction"),(0,i.kt)("p",null,"In most Selenium-based test automation frameworks, CSS or XPath selectors are commonly used to locate elements on a page.\nSerenity BDD provides a simpler way of interacting with common UI components, which can avoid needing to use XPath or CSS expressions."),(0,i.kt)("p",null,"For example, the following HTML code illustrates a few different ways to represent a button:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'<button type="button" class="btn btn-primary">Login</button>\n<input type="submit" value="Login">\n')),(0,i.kt)("p",null,"In Serenity, we could interact with these using XPath or CSS, e.g."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"$(\"css:input[value='Login']\").click()\n")),(0,i.kt)("p",null,"or"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"$(\"xpath://button[.='Login']\").click()\n")),(0,i.kt)("p",null,"However, if the UI implementation switched from one to another, the test would break."),(0,i.kt)("p",null,"Serenity Page Elements provide a more intuitive way to identify many common UI elements. Using Serenity Page Elements, we can use a more expression like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'import net.serenitybdd.screenplay.ui.Button;\n.\n.\n.\n$(Button.called("Login")).click();\n')),(0,i.kt)("p",null,"Or for a Screenplay test, you could do the following:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'actor.attemptsTo(\n    Click.on(Button.called("Login"))\n);\n')),(0,i.kt)("p",null,"Under the hood, Serenity will look for ",(0,i.kt)("inlineCode",{parentName:"p"},"<button>"),' elements called "Logon" or ',(0,i.kt)("inlineCode",{parentName:"p"},"<input>")," elements of type ",(0,i.kt)("inlineCode",{parentName:"p"},"submit"),", with a ",(0,i.kt)("em",{parentName:"p"},"value"),", ",(0,i.kt)("em",{parentName:"p"},"id"),", or ",(0,i.kt)("em",{parentName:"p"},"data-test"),' attribute of "login", or even a CSS class of "login".'),(0,i.kt)("p",null,"This means that, in many cases, you can use the ",(0,i.kt)("inlineCode",{parentName:"p"},"Button")," class directly in your code, without having to inspect the page structure first."),(0,i.kt)("p",null,"Serenity Page Elements are found in the ",(0,i.kt)("inlineCode",{parentName:"p"},"serenity-screenplay-webdriver")," module, but they can be used in both Screenplay and Action Class-based tests."),(0,i.kt)("p",null,"There are many different types of page elements available. All of them have the ",(0,i.kt)("inlineCode",{parentName:"p"},"named()")," method, but some have other methods for more specific locator strategies, such as ",(0,i.kt)("inlineCode",{parentName:"p"},"withLabel()")," for checkboxes."),(0,i.kt)("p",null,"Let's look at each type of page element in more detail."),(0,i.kt)("h2",{id:"buttons"},"Buttons"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"Button")," page element locates a ",(0,i.kt)("inlineCode",{parentName:"p"},"<button>")," element with a specific tect, or an ",(0,i.kt)("inlineCode",{parentName:"p"},"<input>")," element of type ",(0,i.kt)("inlineCode",{parentName:"p"},"submit")," with a specific value."),(0,i.kt)("p",null,"Suppose we have the following HTML code:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'<button type="button">A Button</button>\n<input type="submit" value="Submit Me!" name="submit-button" data-test="submit-the-button">\n<input type="button" value="Press Here">\n')),(0,i.kt)("p",null,"We could use the following expressions to identify these elements:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Strategy"),(0,i.kt)("th",{parentName:"tr",align:null},"Example"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"By text"),(0,i.kt)("td",{parentName:"tr",align:null},'Button.called("A Button")')),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"By value"),(0,i.kt)("td",{parentName:"tr",align:null},'Button.called("Press Here")')),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"By name"),(0,i.kt)("td",{parentName:"tr",align:null},'Button.called("submit-button")')),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"By data-test attribute"),(0,i.kt)("td",{parentName:"tr",align:null},'Button.called("submit-the-button")')))),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"The ",(0,i.kt)("inlineCode",{parentName:"p"},"called()")," method will match the ",(0,i.kt)("inlineCode",{parentName:"p"},"id"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"name"),", or ",(0,i.kt)("inlineCode",{parentName:"p"},"data-test")," attribute for any kind of Page Element, so we won't repeat them everywhere in the following sections."))),(0,i.kt)("h2",{id:"checkbox"},"Checkbox"),(0,i.kt)("p",null,"This element will match an ",(0,i.kt)("inlineCode",{parentName:"p"},"<input>"),' element of type "checkbox", with a specified ',(0,i.kt)("em",{parentName:"p"},"value"),",\n",(0,i.kt)("em",{parentName:"p"},"data-test"),", or ",(0,i.kt)("em",{parentName:"p"},"class")," attribute value."),(0,i.kt)("p",null,"Suppose we have the following HTML:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'<input type="checkbox" id="vehicle1" value="Bike" class="bikeride">\n<label for="vehicle1"> I have a bike</label><br>\n<input type="checkbox" id="vehicle2" value="Car" class="field-style">\n<label for="vehicle2"> I have a car</label><br>\n<input type="checkbox" id="vehicle3" value="Boat" checked>\n<label for="vehicle3"> I have a boat</label><br>\n')),(0,i.kt)("p",null,"We could use the following expressions to identify these elements:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Strategy"),(0,i.kt)("th",{parentName:"tr",align:null},"Example"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"By id"),(0,i.kt)("td",{parentName:"tr",align:null},'Checkbox.called("vehicle1")')),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"By value"),(0,i.kt)("td",{parentName:"tr",align:null},'Checkbox.withValue("Bike")')),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"By label"),(0,i.kt)("td",{parentName:"tr",align:null},'Checkbox.withLabel("I have a bike")')))),(0,i.kt)("h2",{id:"dropdown"},"Dropdown"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"Dropdown")," page element lets us work with a ",(0,i.kt)("inlineCode",{parentName:"p"},"<select>")," dropdown list. Suppose we had the following HTML:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'<label for="cars">Choose a car:</label>\n<select name="cars" id="cars">\n    <option value="">---Pick Your Car---</option>\n    <option value="volvo">Volvo</option>\n    <option value="saab">Saab</option>\n    <option value="mercedes">Mercedes</option>\n    <option value="audi">Audi</option>\n</select>\n')),(0,i.kt)("p",null,"We could use the following expressions to identify these elements:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Strategy"),(0,i.kt)("th",{parentName:"tr",align:null},"Example"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"By name or id"),(0,i.kt)("td",{parentName:"tr",align:null},'Dropdown.called("cars")')),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"By label"),(0,i.kt)("td",{parentName:"tr",align:null},'Dropdown.withLabel("Choose a car:")')),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"By default option"),(0,i.kt)("td",{parentName:"tr",align:null},'Dropdown.withLabel("---Pick Your Car---")')))),(0,i.kt)("h2",{id:"image"},"Image"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"Image")," page element lets us interact with ",(0,i.kt)("inlineCode",{parentName:"p"},"<img>")," elements. For example, suppose we had the following HTML code:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'<img src="img_girl.jpg" alt="Girl in a jacket" width="500" height="600">\n')),(0,i.kt)("p",null,"We could use the following expressions to identify these elements:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Strategy"),(0,i.kt)("th",{parentName:"tr",align:null},"Example"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"By alt text"),(0,i.kt)("td",{parentName:"tr",align:null},'Image.withAltText("Girl in a jacket")')),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"By src"),(0,i.kt)("td",{parentName:"tr",align:null},'Image.withSrc("img_girl.jpg")')),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"By src (starting with)"),(0,i.kt)("td",{parentName:"tr",align:null},'Image.withSrcStartingWith("img_")')),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"By src (ending with)"),(0,i.kt)("td",{parentName:"tr",align:null},'Image.withSrcEndingWith("girl.jpg")')))),(0,i.kt)("h2",{id:"inputfield"},"InputField"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"InputField")," page element represents an ",(0,i.kt)("inlineCode",{parentName:"p"},"<input>")," element in a form, with or without a ",(0,i.kt)("inlineCode",{parentName:"p"},"<label>"),". For example, suppose we had the following HTML code:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'<label for="customer_name">Customer Name</label>\n<input type="text" id="customer_name" name="customername" placeholder="Enter the customer name" />\n')),(0,i.kt)("p",null,"We could use the following expressions to identify these elements:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Strategy"),(0,i.kt)("th",{parentName:"tr",align:null},"Example"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"By name"),(0,i.kt)("td",{parentName:"tr",align:null},'InputField.called("customername")')),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"By id"),(0,i.kt)("td",{parentName:"tr",align:null},'InputField.called("customer_name")')),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"By placeholder"),(0,i.kt)("td",{parentName:"tr",align:null},'InputField.withPlaceholder("Enter the customer name")')),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"By label"),(0,i.kt)("td",{parentName:"tr",align:null},'InputField.withLabel("Customer Name")')))),(0,i.kt)("h2",{id:"link"},"Link"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"Link")," page element interacts with HTML ",(0,i.kt)("inlineCode",{parentName:"p"},"<a>")," elements. For example, suppose we have the following HTML code:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'\x3c!-- A simple link ---\x3e\n<a href="...">Link 1</a><br/>\n\x3c!-- A link with a title --\x3e\n<a href="..." title="Link Number 2">Link 2</a><br/>\n\x3c!-- A link with an icon and a text--\x3e\n<a href="#" onclick="update(\'Link 3\')"><i class="glyphicon glyphicon-cloud"></i>Link 3</a><br/>\n')),(0,i.kt)("p",null,"We could use the following expressions to identify these elements:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Strategy"),(0,i.kt)("th",{parentName:"tr",align:null},"Example"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"By link text"),(0,i.kt)("td",{parentName:"tr",align:null},'Link.called("Link 1")')),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"By link title"),(0,i.kt)("td",{parentName:"tr",align:null},'Link.withTitle("Link Number 2")')),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"By partial link text"),(0,i.kt)("td",{parentName:"tr",align:null},'Link.containing("ink")')),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"By starting text"),(0,i.kt)("td",{parentName:"tr",align:null},'Link.startingWith("Link")')),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"By icon"),(0,i.kt)("td",{parentName:"tr",align:null},'Link.withIcon("glyphicon-cloud")')))),(0,i.kt)("h2",{id:"pageelement"},"PageElement"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"PageElement")," page element represents any element on a page. For example, suppose we have the following HTML code:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'<div id="container" data-test="the-container" class="a-container">\n    <div class="item">\n        <h2>Item 1 heading</h2>\n        <div>\n            <span class="description">Item 1 description</span>\n        </div>\n    </div>\n    <div class="item">\n        <h2>Item 2 heading</h2>\n        <div>\n            <span class="description">Item 2 description</span>\n        </div>\n    </div>\n</div>\n')),(0,i.kt)("p",null,"We could use the following expressions to identify elements in this code:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Strategy"),(0,i.kt)("th",{parentName:"tr",align:null},"Example"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"By id"),(0,i.kt)("td",{parentName:"tr",align:null},'PageElement.called("container")')),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"By data-test value"),(0,i.kt)("td",{parentName:"tr",align:null},'PageElement.called("the-container")')),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Containing a text value"),(0,i.kt)("td",{parentName:"tr",align:null},'PageElement.called("item").containingText("Item 1")')),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Containing a text value (with a CSS locator)"),(0,i.kt)("td",{parentName:"tr",align:null},'PageElement.locatedBy(".item").containingText("Item 1")')))),(0,i.kt)("h2",{id:"radiobutton"},"RadioButton"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"RadioButton")," page element represents a set of radio buttons. For example, suppose we have the following HTML code:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'<input type="radio" id="html" name="fav_language" value="HTML" class="html-radio">\n<label for="html">Choose HTML</label><br>\n<input type="radio" id="css" name="fav_language" value="CSS">\n<label for="css">Choose CSS</label><br>\n<input type="radio" id="javascript" name="fav_language" value="JavaScript">\n<label for="javascript">Choose JavaScript</label><br><br>\n')),(0,i.kt)("p",null,"We could use the following expressions to identify these elements:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Strategy"),(0,i.kt)("th",{parentName:"tr",align:null},"Example"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"By id"),(0,i.kt)("td",{parentName:"tr",align:null},'RadioButton.called("html")')),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"By label"),(0,i.kt)("td",{parentName:"tr",align:null},'RadioButton.withLabel("Choose CSS")')),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"By value"),(0,i.kt)("td",{parentName:"tr",align:null},'RadioButton.withValue("JavaScript")')))))}s.isMDXComponent=!0}}]);